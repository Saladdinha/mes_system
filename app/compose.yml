services:
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    tty: true
    ports:
      - '7000:80'
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./:/var/www/html
      - ./docker/logs/nginx:/var/logs/nginx
    depends_on:
      - php
      - db
    networks:
      - webapp_network
  php:
    container_name: ${APP_NAME}_app
    build:
      context: .
      dockerfile: Dockerfile
      args:
        app_env: dev
    restart: unless-stopped
    tty: true
    expose:
      - '9000'
    volumes:
      - ./:/var/www/html
    networks:
      - webapp_network
    depends_on:
      db:
        condition: service_started
  db:
    image: postgres:latest
    container_name: ${APP_NAME}_database
    environment:
      POSTGRES_USER: ${APP_NAME}_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${APP_NAME}_database
    volumes:
      - database_volume:/var/lib/postgres
    networks:
      - webapp_network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${APP_NAME}_admin ${APP_NAME}_database"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  webapp_network:
    driver: bridge
volumes:
  database_volume: